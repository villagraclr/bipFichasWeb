@using SistemasBIPS.Models
@model EvaluacionesFormulariosPartialView

<div class="col-sm-12">
    <ul id="ultab@(Model.idPregunta.ToString())" class="nav nav-tabs">
        @if (Model.valor_funcion.Count > 0)
        {
            for (decimal? x = Model.valor_funcion.First().Valor; x <= Model.valor_funcion.First().Valor2; x++)
            {
                <li role="presentation" @(x == 1 ? "class=active" : string.Empty)><a href="#tab@(Model.id.ToString() + x.ToString())" data-toggle="tab">@(Model.valores.Count(p => p.Orden == x) > 0 ? Model.valores.FirstOrDefault(p => p.Orden == x && p.IdParametro != p.IdCategoria).Descripcion : x.ToString())</a></li>
            }
        }
    </ul>
    <div id="tab@(Model.idPregunta.ToString())" class="tab-content">
        @if (Model.valor_funcion.Count > 0)
        {
            for (decimal? x = Model.valor_funcion.First().Valor; x <= Model.valor_funcion.First().Valor2; x++)
            {
                <div class="tab-pane fade @(x == 1 ? "in active" : string.Empty)" id="tab@(Model.id.ToString() + x.ToString())">
                    <div class="panel panel-default tab-sin-borde">
                        <div class="panel-body form-horizontal">
                            @if (Model.preguntasGrupos.Count > 0)
                            {
                                var preguntasGrupos = ((Model.idPregunta.ToString() == "7028" || Model.idPregunta.ToString() == "7058") ? Model.preguntasGrupos : Model.preguntasGrupos.Where(p => p.menuGrupo == x));
                                foreach (var pregTab in preguntasGrupos)
                                {
                                    if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("Titulo"))
                                    {
                                        string pregunta = pregTab.pregunta;
                                        string[] pregDinamica = (pregunta.IndexOf('#') > 0 ? pregunta.Split('#') : new string[] { });
                                        if (pregDinamica.Length > 0)
                                        {
                                            int anosDinamicos = 0;
                                            if (pregDinamica[1].IndexOf('-') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano - int.Parse(pregDinamica[1].Split('-')[1]);
                                            }
                                            else if (pregDinamica[1].IndexOf('+') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano + int.Parse(pregDinamica[1].Split('+')[1]);
                                            }
                                            else
                                            {
                                                anosDinamicos = Model.cabecera.ano;
                                            }
                                            pregunta = pregDinamica[0] + anosDinamicos.ToString() + pregDinamica[2];
                                        }
                                        IHtmlString preguntaHTML = new HtmlString(pregunta);
                                        <div id="divPreg@(pregTab.idPregunta.ToString())"><p class="bg-info" style="padding:8px;font-size:12px;">@Html.Raw(preguntaHTML)</p></div>
                                    }
                                    else if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("Texto"))
                                    {
                                        string pregunta = pregTab.pregunta;
                                        string[] pregDinamica = (pregunta.IndexOf('#') > 0 ? pregunta.Split('#') : new string[] { });
                                        if (pregDinamica.Length > 0)
                                        {
                                            int anosDinamicos = 0;
                                            if (pregDinamica[1].IndexOf('-') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano - int.Parse(pregDinamica[1].Split('-')[1]);
                                            }
                                            else if (pregDinamica[1].IndexOf('+') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano + int.Parse(pregDinamica[1].Split('+')[1]);
                                            }
                                            else {
                                                anosDinamicos = Model.cabecera.ano;
                                            }
                                            pregunta = pregDinamica[0] + anosDinamicos.ToString() + pregDinamica[2];
                                        }
                                        IHtmlString preguntaHTML = new HtmlString(pregunta);
                                        <div class="form-group form-group-sm" id="divPregTab@(pregTab.idPregunta.ToString() + x.ToString())">
                                            <label for="txt@(Model.id)" class="col-sm-4 control-label">@Html.Raw(preguntaHTML)</label>
                                            <div class="col-sm-6">
                                                @{ var resp = (Model.respuestas.Count(p => p.IdPregunta == pregTab.idPregunta) > 0 ? Model.respuestas.FirstOrDefault(p=>p.IdPregunta== pregTab.idPregunta).Respuesta : string.Empty); }
                                                <input type="text" name="" class="form-control input-sm" id="Tabtxt@(pregTab.idPregunta.ToString())" placeholder="Ingrese registro" value="@resp" readonly />
                                            </div>
                                        </div>
                                    }
                                    else if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("Total"))
                                    {
                                        string pregunta = pregTab.pregunta;
                                        string[] pregDinamica = (pregunta.IndexOf('#') > 0 ? pregunta.Split('#') : new string[] { });
                                        if (pregDinamica.Length > 0)
                                        {
                                            int anosDinamicos = 0;
                                            if (pregDinamica[1].IndexOf('-') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano - int.Parse(pregDinamica[1].Split('-')[1]);
                                            }
                                            else if (pregDinamica[1].IndexOf('+') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano + int.Parse(pregDinamica[1].Split('+')[1]);
                                            }
                                            else {
                                                anosDinamicos = Model.cabecera.ano;
                                            }
                                            pregunta = pregDinamica[0] + anosDinamicos.ToString() + pregDinamica[2];
                                        }
                                        IHtmlString preguntaHTML = new HtmlString(pregunta);
                                        <div class="form-group form-group-sm" id="divPregTab@(pregTab.idPregunta.ToString() + x.ToString())">
                                            <label for="txt@(Model.id)" class="col-sm-4 control-label">@Html.Raw(preguntaHTML)</label>
                                            <div class="col-sm-6">
                                                @{ var resp = (Model.respuestas.Count(p => p.IdPregunta == pregTab.idPregunta) > 0 ? Model.respuestas.FirstOrDefault(p => p.IdPregunta == pregTab.idPregunta).Respuesta : string.Empty); }
                                                <input type="text" name="" class="form-control input-sm total@(Model.id)" id="Tabtxt@(pregTab.idPregunta.ToString())" placeholder="Ingrese registro" value="@resp" readonly />
                                            </div>
                                        </div>
                                    }
                                    else if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("TextoGrande"))
                                    {
                                        string pregunta = pregTab.pregunta;
                                        string[] pregDinamica = (pregunta.IndexOf('#') > 0 ? pregunta.Split('#') : new string[] { });
                                        if (pregDinamica.Length > 0)
                                        {
                                            int anosDinamicos = 0;
                                            if (pregDinamica[1].IndexOf('-') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano - int.Parse(pregDinamica[1].Split('-')[1]);
                                            }
                                            else if (pregDinamica[1].IndexOf('+') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano + int.Parse(pregDinamica[1].Split('+')[1]);
                                            }
                                            else {
                                                anosDinamicos = Model.cabecera.ano;
                                            }
                                            pregunta = pregDinamica[0] + anosDinamicos.ToString() + pregDinamica[2];
                                        }
                                        IHtmlString preguntaHTML = new HtmlString(pregunta);
                                        <div class="form-group form-group-sm" id="divPregTab@(pregTab.idPregunta.ToString() + x.ToString())">
                                            <label for="txt@(Model.id)" class="col-sm-4 control-label">@Html.Raw(preguntaHTML)</label>
                                            <div class="col-sm-6">
                                                @{ var resp = (Model.respuestas.Count(p => p.IdPregunta == pregTab.idPregunta) > 0 ? Model.respuestas.FirstOrDefault(p => p.IdPregunta == pregTab.idPregunta).Respuesta : string.Empty); }
                                                <textarea class="form-control" name="" rows="3" id="txtTab@(pregTab.idPregunta.ToString() + x.ToString())" @(pregTab.funcion.IdParametro.ToString() == Model.constantes.GetValue("LargoTexto") ? "maxlength=" + pregTab.valor_funcion.First().Valor.ToString() : string.Empty) placeholder="Ingrese registro" aria-describedby="txtCount@(Model.id)" readonly>@resp</textarea>
                                                <span id="txtCount@(Model.id)" class="help-block" style="font-size:12px;">@(pregTab.funcion.IdParametro.ToString() == Model.constantes.GetValue("LargoTexto") ? "Caracteres restantes=" + pregTab.valor_funcion.First().Valor.ToString() : string.Empty)</span>
                                            </div>
                                        </div>
                                    }
                                    else if (pregTab.tipoPregunta.IdCategoria.ToString() == Model.constantes.GetValue("Combo"))
                                    {
                                        string pregunta = pregTab.pregunta;
                                        string[] pregDinamica = (pregunta.IndexOf('#') > 0 ? pregunta.Split('#') : new string[] { });
                                        if (pregDinamica.Length > 0)
                                        {
                                            int anosDinamicos = 0;
                                            if (pregDinamica[1].IndexOf('-') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano - int.Parse(pregDinamica[1].Split('-')[1]);
                                            }
                                            else if (pregDinamica[1].IndexOf('+') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano + int.Parse(pregDinamica[1].Split('+')[1]);
                                            }
                                            else {
                                                anosDinamicos = Model.cabecera.ano;
                                            }
                                            pregunta = pregDinamica[0] + anosDinamicos.ToString() + pregDinamica[2];
                                        }
                                        IHtmlString preguntaHTML = new HtmlString(pregunta);
                                        <div class="form-group form-group-sm" id="divPregTab@(pregTab.idPregunta.ToString() + x.ToString())">
                                            <label for="txt@(Model.id)" class="col-sm-4 control-label">@Html.Raw(preguntaHTML)</label>
                                            <div class="col-sm-6">
                                                @{ var resp = (Model.respuestas.Count(p => p.IdPregunta == pregTab.idPregunta) > 0 ? Model.respuestas.FirstOrDefault(p => p.IdPregunta == pregTab.idPregunta).Respuesta : string.Empty); }
                                                <select class="form-control input-sm numTab-@x" name="" id="Tabcmb@(pregTab.idPregunta.ToString() + x.ToString())" disabled>
                                                    @if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("Seleccione"))
                                                    {
                                                        <option value="-1" @(resp.ToString() == "-1" ? "selected=selected" : string.Empty)>Seleccione</option>
                                                    }
                                                    @if (pregTab.valores.Count > 0 && pregTab.funcion.IdParametro.ToString() != Model.constantes.GetValue("SeleccioneVacio"))
                                                    {
                                                        foreach (var val in pregTab.valores.Where(p => p.IdParametro != p.IdCategoria))
                                                        {
                                                            <option value="@val.IdParametro" @(!string.IsNullOrEmpty(resp.ToString()) ? (decimal.Parse(resp.ToString()) == val.IdParametro ? "selected=selected" : string.Empty) : string.Empty)>@val.Descripcion</option>
                                                        }
                                                    }
                                                    @if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("ComboNumerico"))
                                                    {
                                                        <option value="-1">Seleccione</option>
                                                        if (pregTab.valor_funcion.Count > 0)
                                                        {
                                                            for (decimal? z = pregTab.valor_funcion.First().Valor; z <= pregTab.valor_funcion.First().Valor2; z++)
                                                            {
                                                                <option value="@(z)" @(!string.IsNullOrEmpty(resp.ToString()) ? (decimal.Parse(resp.ToString()) == x ? "selected=selected" : string.Empty) : string.Empty)>@z</option>
                                                            }
                                                        }
                                                    }
                                                    @if (pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("ComboDinamico"))
                                                    {
                                                        <option value="-1" @(resp.ToString() == "-1" ? "selected=selected" : string.Empty)>Seleccione</option>
                                                        if (pregTab.valor_funcion.Count > 0)
                                                        {
                                                            int valor1 = 0, valor2 = 0;
                                                            for (decimal? z = (int.TryParse(pregTab.valor_funcion.First().Valor.ToString(), out valor1) ? (Model.cabecera.ano + valor1) : Math.Round(decimal.Parse(pregTab.valor_funcion.First().Valor.ToString()), 0)); z <= (int.TryParse(pregTab.valor_funcion.First().Valor2.ToString(), out valor2) ? (Model.cabecera.ano + valor2) : Math.Round(decimal.Parse(pregTab.valor_funcion.First().Valor2.ToString()), 0)); z++)
                                                            {
                                                                <option value="@(z)" @(!string.IsNullOrEmpty(resp.ToString()) ? (decimal.Parse(resp.ToString()) == x ? "selected=selected" : string.Empty) : string.Empty)>@z</option>
                                                            }
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }
                                    else if (pregTab.tipoPregunta.IdCategoria.ToString() == Model.constantes.GetValue("GrupoCheck"))
                                    {
                                        string pregunta = pregTab.pregunta;
                                        string[] pregDinamica = (pregunta.IndexOf('#') > 0 ? pregunta.Split('#') : new string[] { });
                                        if (pregDinamica.Length > 0)
                                        {
                                            int anosDinamicos = 0;
                                            if (pregDinamica[1].IndexOf('-') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano - int.Parse(pregDinamica[1].Split('-')[1]);
                                            }
                                            else if (pregDinamica[1].IndexOf('+') > 0)
                                            {
                                                anosDinamicos = Model.cabecera.ano + int.Parse(pregDinamica[1].Split('+')[1]);
                                            }
                                            else {
                                                anosDinamicos = Model.cabecera.ano;
                                            }
                                            pregunta = pregDinamica[0] + anosDinamicos.ToString() + pregDinamica[2];
                                        }
                                        IHtmlString preguntaHTML = new HtmlString(pregunta);
                                        string cssGrupoCheckPadres = pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("GrupoCheckPadre") ? "margin-bottom: -38px;" : string.Empty;
                                        <div class="form-group form-group-sm" id="divPregTab@(pregTab.idPregunta.ToString() + x.ToString())" style="@cssGrupoCheckPadres">
                                            @{ string cssGrupoCheckPadresLabel = pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("GrupoCheckPadre") ? "margin-top: 5px;" : string.Empty; }
                                            <label for="txt@(Model.id)" class="col-sm-4 control-label" style="@cssGrupoCheckPadresLabel">@((pregTab.tipoPregunta.IdParametro.ToString() == Model.constantes.GetValue("GrupoCheckHijo")) ? new HtmlString(string.Empty) : Html.Raw(preguntaHTML))</label>
                                            @if (pregTab.tipoPregunta.IdParametro.ToString() != Model.constantes.GetValue("GrupoCheckPadre"))
                                            {
                                                <div class="col-sm-6">
                                                    <div class="checkbox" style="padding-top:6px;font-size:12px;">
                                                        @{ var resp = (Model.respuestas.Count(p => p.IdPregunta == pregTab.idPregunta) > 0 ? Model.respuestas.FirstOrDefault(p => p.IdPregunta == pregTab.idPregunta).Respuesta : string.Empty); }
                                                        <label><input type="checkbox" name="" id="Tabcbx@(pregTab.idPregunta.ToString() + x.ToString())" style="margin-top:2px;" @(!string.IsNullOrEmpty(resp.ToString()) ? "checked" : string.Empty) disabled>@pregTab.pregunta</label>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>